#!/bin/bash

function usage ()
{
  local usage="
Usage: $(basename $0) [OPTIONS] [COMMAND] [COMMAND OPTIONS]

Commands:
  run                          Run rmud. Pass rmud options after 'run'
  versions                     Print available versions

Options:
  -i, --image <name>           Image name (for example: rmud/rmud:19.03.4)
 
For example:
  $(basename $0) -i rmud/rmud:19.03.4 run -h
"
    echo "$usage"
}

function run ()
{
    #[[ -z "$IMAGE" ]] && { echo "Please specify image name (--image rmud/rmud:...)"; exit 1; }
    [[ -z "$IMAGE" ]] && { docker pull "rmud/rmud:latest"; IMAGE="rmud/rmud:latest"; }

    echo "Starting: $IMAGE"
    docker run \
        -v "$(pwd)/../rmud-data":/rmud-data \
        -v "$(pwd)/../rmud-live":/rmud-live \
        -p 3040:3040 \
        -p 4040:4040 \
        --rm \
        "$IMAGE" \
        ./rmud \
        "${POSITIONAL[@]:1}"
    echo "Stopped: $IMAGE"
}

function versions ()
{
    source docker-tags
    docker-tags rmud/rmud | jq '.["tags"]'
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    if [ ${#POSITIONAL[@]} -eq 0 ]; then
        key="$1"
        case $key in
            -i|--image)
                IMAGE="$2"
                shift 2
                ;;
            *)
                POSITIONAL+=("$1")
                shift
                ;;
        esac
    else
        POSITIONAL+=("$1")
        shift
    fi
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [ $# -lt 1 ]
then
    usage
    exit 1
fi

command="$1"

case $command in
    run)
        run
        ;;
    versions)
        versions
        ;;
    *)
        echo "Invalid command: $command"
        exit 1
esac

